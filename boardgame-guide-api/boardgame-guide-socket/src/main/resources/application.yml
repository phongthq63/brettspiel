server:
  port: ${PORT:8081}
  forward-headers-strategy: native

springdoc:
  swagger-ui:
    enabled: true
    configUrl: ${SPRINGDOC_PATH:}/v3/api-docs/swagger-config
    url: ${SPRINGDOC_PATH:}/v3/api-docs
  path-provider: ${SPRINGDOC_PATH:}

spring:
  application:
    name: boardgame-guide-socket
  autoconfigure:
    exclude:
      - org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration
      - org.redisson.spring.starter.RedissonAutoConfigurationV2
      - org.springframework.boot.autoconfigure.mongo.MongoAutoConfiguration
      - org.springframework.boot.autoconfigure.data.mongo.MongoDataAutoConfiguration
      - org.springframework.boot.autoconfigure.amqp.RabbitAutoConfiguration
  threads:
    virtual:
      enabled: true


  kafka:
    bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS:127.0.0.1:9092}
    schema-registry: ${KAFKA_SCHEMA_REGISTRY:http://127.0.0.1:32253}
    producer:
      enable: true
      client-id: ${PROJECT:brettspiel}.${ENVIRONMENT:dev}.socket-producer
      retry: 5
      batch-size: ${KAFKA_PRODUCER_BATCH_SIZE:50}
      linger: ${KAFKA_PRODUCER_LINGER:1000}
      topic:
    consumer:
      enable: true
      instance-id: ${PROJECT:brettspiel}.${ENVIRONMENT:dev}.socket.${HOSTNAME:instance}
      groupId: ${KAFKA_GROUP_ID:${PROJECT:brettspiel}.${ENVIRONMENT:dev}.brettspiel-socket}
      topic:
      auto-offset-reset: "latest"
      max-poll-interval-ms: 300000
      retry: 5
      backoff-delay: 60000
      session-timeout-ms: 60000
      heartbeat-interval-ms: 20000
    sasl:
      mechanism: ${KAFKA_MECHANISM:}
      jaas:
        config:
          username: ${KAFKA_USERNAME:}
          password: ${KAFKA_PASSWORD:}
      security:
        protocol: ${KAFKA_PROTOCOL:}


jwt:
  secret: ThisIsSecretKey

allow:
  origins: ${ALLOW_ORIGINS:http://localhost:3000}


sentry:
  dsn: ${SENTRY_DSN:}
  environment: ${ENVIRONMENT:dev}
  connection-timeout-millis: 10000
  read-timeout-millis: 10000
  max-depth: 10
  max-breadcrumbs: 30
  max-cache-items: 100
  sample-rate: 0.1
  tags:
    project: boardgame-guide-api
    service: boardgame-guide-socket
  send-default-pii: true
  logging.enabled: true
  logging.minimum-event-level: warn
  logging.minimum-breadcrumb-level: debug


management:
  endpoint:
    health:
      show-details: always

#============================================================================
# netty socket io setting
#============================================================================
# The host can be set to localhost or local IP for local testing, and can be changed to the server IP when running on a Linux server
socket-io:
  context: ${SOCKETIO_CONTEXT:/socket.io}
  port: ${PORT_SOCKET:8699}
  authentication: true
  cluster: false
  # Set the maximum length of data processed per frame to prevent others from using big data to attack the server
  max-frame-payload-length: 1048576
  # Set http interaction maximum content length
  max-http-content-length: 1048576
  # socket The size of the number of connections (for example, the boss thread group that only listens to one port is 1)
  boss-count: 1
  work-count: 100
  allow-custom-requests: true
  # Protocol upgrade timeout (in milliseconds), the default is 10 seconds. HTTP handshake upgrade to ws protocol timeout
  upgrade-timeout: 10000
  # Ping message timeout time (milliseconds), the default is 10 seconds. If no heartbeat message is received within this time interval, a timeout event will be sent
  ping-timeout: 30000
  # Ping Message interval (milliseconds), the default is 5 seconds. The client sends a heartbeat message interval to the server
  ping-interval: 10000
  # Namespace for filter message if use same pubsub store in multi environment
  namespace: ${PROJECT:brettspiel}.${ENVIRONMENT:dev}
